server {
  listen 80;
  server_name _;

  # All non-API traffic -> forwarded to Hostinger (your frontend)
  location / {
    # Use a variable so nginx uses the resolver (avoids IPv6 literal connect issues)
    set $frontend_host nanosemic.co.in;
    proxy_pass https://$frontend_host$request_uri;
    proxy_ssl_server_name on;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_cache_bypass $http_upgrade;

    # Cache static assets (handled by Hostinger) â€” still forwarded through proxy
    expires 7d;
    add_header Cache-Control "public";
  }

  # API proxy to your Render backend
  location /api/ {
    set $api_host api.nanosemic.co.in;
    proxy_pass https://$api_host$request_uri;
    proxy_ssl_server_name on;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_cache_bypass $http_upgrade;

    # rate limit
    limit_req zone=one burst=20 nodelay;
  }
}
