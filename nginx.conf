# Enable HTTP/2 and Keep-Alive
events { worker_connections 1024; }

http {
    # ================================
    # Performance & Compression
    # ================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;

    # Gzip Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss image/svg+xml;

    # ================================
    # Rate Limiting (Basic DDoS Protection)
    # ================================
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    server {
        listen 80 http2;

        server_name _;

        # ================================
        # Serve Frontend (Static Cache)
        # ================================
        location / {
            proxy_pass https://nanosemic.co.in; # change to your actual hosting URL
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Cache static assets for 7 days
            location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
                expires 7d;
                access_log off;
                add_header Cache-Control "public";
            }
        }

        # ================================
        # Backend API Proxy
        # ================================
        location /api {
            limit_req zone=one burst=20 nodelay; # Rate limiting
            proxy_pass https://api.nanosemic.co.in; # change to your Render backend URL
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
